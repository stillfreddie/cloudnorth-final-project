pipeline {
  agent any

  environment {
    // Add Go binary directory to PATH manually
    PATH = "/usr/local/go/bin:$PATH"
    AWS_ACCESS_KEY_ID = credentials('aws-access-key')
    AWS_SECRET_ACCESS_KEY = credentials('aws-secret-key')
  }

  stages {

    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Code Quality - Linting') {
      steps {
        script {
          echo "Running Golang linter..."
          sh '''
            cd backend
            golangci-lint run
          '''
        }
      }
    }

    stage('Run Unit Tests') {
      steps {
        script {
          echo "Running Go Unit Tests..."
          sh '''
            cd backend
            go test ./...
          '''
        }
      }
    }

    stage('Build Docker Images') {
      steps {
        script {
          withCredentials([usernamePassword(
            credentialsId: 'dockerhub-creds',         // <-- Existing DockerHub credentials ID
            usernameVariable: 'DOCKER_USER',
            passwordVariable: 'DOCKER_PASS'
          )]) {
            sh '''
              echo "Logging into DockerHub..."
              echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin

              echo "Building and tagging Docker images..."
              docker build -t stillfreddie/cloudnorth-frontend:latest ./frontend
              docker build -t stillfreddie/cloudnorth-backend:latest ./backend

              echo "Pushing images to DockerHub..."
              docker push stillfreddie/cloudnorth-frontend:latest
              docker push stillfreddie/cloudnorth-backend:latest
            '''
          }
        }
      }
    }

    stage('Deploy to Kubernetes') {
      steps {
        script {
          echo "Deploying Frontend and Backend using Helm..."

          sh '''
            # Check kubectl context (optional debug)
            echo "Current kubectl context:"
            kubectl config current-context             # <-- EDITED HERE (Optional visibility)

            # Apply blue version of Helm deployments
            helm upgrade --install cloudnorth-frontend ./helm/frontend -f ./helm/frontend/values-blue.yaml
            helm upgrade --install cloudnorth-backend ./helm/backend -f ./helm/backend/values-blue.yaml
          '''
        }
      }
    }

  }

  post {
    success {
      echo "Build, push, and deployment completed successfully!"
    }
    failure {
      echo "Build or deployment failed. Please check logs."
    }
  } // <-- EDITED HERE: Added post block for logging outcomes
}